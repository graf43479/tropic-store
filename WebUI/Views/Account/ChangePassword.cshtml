@model WebUI.Models.RegisterViewModel 

@*
@using (Ajax.BeginForm("UserAccountEdit", "Account", null, new AjaxOptions
    {
        UpdateTargetId = "update-message2",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "updateSuccess2"
    }, new { @id = "updateAccountEditForm" }))
*@


<div class="modal" id="stack7" tabindex="-1" data-focus-on="input:first">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
               <div class="heading" style="margin-top: 20px; margin-bottom: 0;">
                    <h2 id="myModalLabel">Смена пароля</h2>
                    </div>
            </div>
            
                
               @using (Ajax.BeginForm("ChangePassword", "Account", null, new AjaxOptions
               {
                   UpdateTargetId = "update-message3",
                   InsertionMode = InsertionMode.Replace,
                   HttpMethod = "POST",
                   OnBegin = "gifLoaderBefore",
                   OnFailure = "gifLoaderAfter",
                   OnComplete = "gifLoaderAfter",
                   OnSuccess = "updateSuccess"
               }, new { @id = "ChangePasswordForm" }))
               {
                   <div class="modal-body container-fluid">
                       @*    @Html.ValidationSummary(true, "Неудачная попытка авторизации. Пожалуйста попробуйте ещё раз.")*@
                       <div id="update-message3" class="error invisible">Введенные данные некорректны! Пожалуйста попробуйте ещё раз!</div>
                       <div class="col-md-12">
                           <fieldset>
                            
                               @Html.ValidationSummary(true)  
                               @Html.HiddenFor(model => model.UserID)
                               @Html.HiddenFor(model => model.IsActivated)
                               @Html.HiddenFor(model => model.Login)
                               @Html.HiddenFor(model => model.Mailing)
                               @Html.HiddenFor(model => model.Phone)
                               @Html.HiddenFor(model => model.UserName)
                               @Html.HiddenFor(model => model.Email)
                               @Html.HiddenFor(model => model.PasswordSalt)
    
        

                               <div id="update-message2" class="error invisible"></div>
                          
                               <div class="form-group has-feedback">
                                   <label class="control-label">Старый пароль:</label> 
                                   <div class="">
                                       @Html.TextBoxFor(x => x.OldPassword, new { @placeholder = "Введите старый пароль", @class = "form-control" }) 
                                       @*<p class="help-block">Введите Ваше имя</p>*@
                                       <span class="glyphicon glyphicon-pencil form-control-feedback"></span>
                                       @Html.ValidationMessageFor(x => x.OldPassword)
                                   </div>
                               </div>
                
                               <div class="form-group has-feedback">
                                   <label class="control-label">Новый пароль:</label> 
                                   <div class="">
                                       @Html.TextBoxFor(x => x.Password, new { @placeholder = "Введите новый пароль", @class = "form-control" }) 
                                       <span class="glyphicon glyphicon-pencil form-control-feedback"></span>
                                       @Html.ValidationMessageFor(x => x.Password)
                                   </div>
                               </div>
                
                               <div class="form-group has-feedback">
                                   <label class="control-label">Подтверждение:</label> 
                                   <div class="">
                                       @Html.TextBoxFor(x => x.ConfirmPassword, new { @placeholder = "Повторите пароль", @class = "form-control" }) 
                                       <span class="glyphicon glyphicon-pencil form-control-feedback"></span>
                                       @Html.ValidationMessageFor(x => x.ConfirmPassword)
                                   </div>
                               </div>
                           </fieldset>    
                       </div>
                   </div>

                   <div class="modal-footer">
                @*<div style="float: left;" class="">@Html.ActionLink("Изменить пароль", "ChangePassword", null, new { @class = "btn btn-default btn-md change-password", @style = "float: right;" })</div>*@
                  @*<div class="change-password btn btn-custom btn-md">Редактировать учетную запись</div>*@
                <div class="btn" data-dismiss="modal" id="closeButton" aria-hidden="true">Закрыть</div>
                <div class="btn btn-custom" id="ChangePasswordButton">OK</div>
                @*<button id="tmps">Гы</button>*@
                @*<a id="tmps" href="" class="btn btn-primary">Zapisz</a>*@
    
            </div>
               }
            
    
            
        </div>
    </div>
</div>

@*

@using (Ajax.BeginForm("ChangePassword", "Account", null, new AjaxOptions()
    {
        UpdateTargetId = "update-message3",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "updateSuccess3"
    }, new { @id = "changePasswordForm" }))
{
    <div id="update-message3" class="error invisible"></div>
    <fieldset class="col-md-12 col-lg-12 col-xs-12 ">
        <legend>Восстановление пароля</legend>
        @Html.ValidationSummary(true)  
    @Html.HiddenFor(model => model.UserID)
    @Html.HiddenFor(model => model.IsActivated)
    @Html.HiddenFor(model => model.Login)
    @Html.HiddenFor(model => model.Mailing)
    @Html.HiddenFor(model => model.Phone)
    @Html.HiddenFor(model => model.UserName)
    @Html.HiddenFor(model => model.Email)
    @Html.HiddenFor(model => model.PasswordSalt)
    
    
    
        <div class="editor-label"> @Html.Label("Существующий пароль:")</div>
        <div class="editor-field"> @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.OldPassword)</div>

    
        <div class="editor-label"> @Html.Label("Новый пароль:")</div>
        <div class="editor-field"> @Html.PasswordFor(model => model.Password, new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.Password)</div>

        <div class="editor-label"> @Html.Label("Повторите новый пароль:")</div>
        <div class="editor-field"> @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.ConfirmPassword)</div>
        @*
        <div class="editor-label"> @Html.Label("Телефон")</div>
        <div class="editor-field">@Html.TextBoxFor(model => model.Phone) @Html.ValidationMessageFor(x => x.Phone)</div>
        
        <div class="editor-label"> @Html.Label("Email")</div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.Email) @Html.ValidationMessageFor(x => x.Email) </div>
    
    
    
        
        </fieldset>

    //<input type="submit"  class="actionButtons"  value="Сохранить" />
}


*@
