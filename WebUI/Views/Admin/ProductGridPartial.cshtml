@using MvcContrib.UI
@using MvcContrib.UI.Grid
@using WebUI.Infrastructure.ExtensionMethods
@*@model IEnumerable<Domain.Entities.Category>*@
@model WebUI.Models.PagedViewModel<WebUI.Models.ProductEditViewModel>

@{TempData["Query"] = Model.Query;}


<style type="text/css">
    .grid-style {
        margin-left: 0;
        margin-right: 0;
    }
</style>

@{
    Html.RenderPartial("Pager", Model.PagedList);
}


@using (Html.BeginForm("DeleteProduct", "Admin", FormMethod.Post))
{    
    @Html.Grid(Model.PagedList).Columns(column =>
    {
        if (User.IsInRole("Admin") || (User.IsInRole("ContentManager")))
        {
            column.Custom(a => Html.Raw("<input type='checkbox' class='reqPayment' name='resubmit' value='" + a.ProductID + "'/>")).Header(o => "<input type=\"checkbox\" id='chkHeader' />")
                  .Encode(false)
                  .Sortable(false)
                  .HeaderAttributes(new Dictionary<string, object> {{"style", "width:20px"}});
        }

        column.For(x => x.ArticleNumber).SortColumnName("ArticleNumber").Named("Артикул").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: center;" } };
        });
        
        column.For(x => x.Name).SortColumnName("Name").Named("Наименование товара").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left;" } };
        });
        
        column.For(x => Html.ActionQueryLink(x.CategoryName, "Products", new { categoryId = x.SelectedCategoryID })).SortColumnName("CategoryName").Named("Категория").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left;" }, { "title", "Просмотреть товары категории " + x.Item.CategoryName } };
        });
        column.For(x => x.Price).SortColumnName("Price").Named("Цена");
        column.For(x => x.OldPrice).SortColumnName("OldPrice").Named("Старая цена");
        
        column.For(x => (x.LastPriceChangeDate!=null) ? x.LastPriceChangeDate.ToString().Remove(10) : "").SortColumnName("LastPriceChangeDate").Named("Дата изменения цены");


        if (User.IsInRole("SEO")!=true)
        {
            column.For(x => x.Quantity).SortColumnName("Quantity").Named("Кол-во");
        }
        

        @*column.For(x => x.IsActive).SortColumnName("IsActive").Named("Активен");
        column.For(x => x.IsDeleted).SortColumnName("IsDeleted").Named("Удален");*@

        

        column.For(x => (x.IsActive == true) ? Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C;' title='Товар " + x.Name + " числится активным'></i>") : Html.Raw("<i class='fa fa-square-o fa-2x' title='Товар " + x.Name + " неактивен' style='color: red'></i>")).SortColumnName("IsActive").Named("Активен");
        
        column.For(x => (x.IsDeleted == true) ? Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: red' title='Товар " + x.Name + " числится удаленным'></i>") : Html.Raw("<i class='fa fa-square-o fa-2x' title='Товар " + x.Name + " не числится как удаленный' style='color: #8EB50C;'></i>")).SortColumnName("IsDeleted").Named("Удаленный");


        column.For(x => x.StartDate.ToShortDateString()).SortColumnName("StartDate").Named("Дата появления");
        column.For(x => x.UpdateDate.ToShortDateString()).SortColumnName("UpdateDate").Named("Дата изменения");


        if (User.IsInRole("Admin") || (User.IsInRole("SEO")))
        {
            column.For(x => (x.Keywords == null) ? Html.Raw("<i class='fa fa-square-o fa-2x' title='Ключевые слова не заданы' style='color: red'></i>") : Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C;' title='Ключевые слова присутствуют'></i>")).SortColumnName("Keywords").Named("Keywords");
            column.For(x => (x.Snippet == null) ? Html.Raw("<i class='fa fa-square-o fa-2x' title='Сниппет не задан' style='color: red'></i>") : Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C;' title='Сниппет в наличии'></i>")).SortColumnName("Snippet").Named("Snippet");
        }
        
        
        
        
        column.Custom(x => Html.Raw("<a href = " + Url.Action("EditProduct", "Admin", new { productId = x.ProductID }) + " title='Редактировать'><i class='fa fa-pencil-square-o fa-2x'></i></a>")).Header(o => "<span class='glyphicon glyphicon-edit'> </span>").Encode(false)
                                        .Sortable(false);
        
        
        
        @* column.For(x => Html.ActionLink("Удалить", "DeleteProduct", new { productId = x.ProductID }, new { @class = "linkButton" })).Named("Options");*@


        if (User.IsInRole("Admin") || (User.IsInRole("ContentManager")))
        {
            column.Custom(x => Html.Raw("<a href = " + Url.Action("DeleteProduct", "Admin", new {productId = x.ProductID}) + " class='linkButton glyphicon glyphicon-remove btn-xs btn btn-danger' title='Удалить'></a>")).Named("Options").Header(o => "<span class='glyphicon glyphicon-remove'> </span>").Encode(false)
                  .Sortable(false);
        }



        //column.For(x => Html.RenderPartial("DeleteProductPreView", "Admin", new { productId = x.ProductID }));




        //column.For(x => Html.Partial("_CheckBoxPartial", x)).Named("Options");
    }
              ).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style").Empty("Нет данных")
 
    
    
    
    
    <div class="col-lg-12" style="padding: 0; margin: 10px 0 10px 0;">
        <a class="btn btn-md btn-default" href="@Url.Action("Export2", "Admin", new { query = "products" })" style=""><i class="fa fa-file-excel-o" style="color: darkgreen">&nbsp;</i>В Excel</a>
        @*@Html.ActionLink("Экспорт отчетов в Excel", "Export2", "Admin", new { query = "products" }, new { @class = "btn btn-md btn-default" })*@
        @{
            if (User.IsInRole("Admin") || (User.IsInRole("ContentManager")))
                {
                    <button type="submit" class="btn btn-md btn-danger " style=""><span class="glyphicon glyphicon-remove">&nbsp;</span>Удалить выбранное</button>
                }
        }
    </div>
    
             
         @*<input id="checker" type="submit" value="OK" />*@
     
     
}

@{
    Html.RenderPartial("Pager", Model.PagedList);
}
    

@*
<script>
    $(function () {
        $('#checker').click(function () {
            if ($(this).is(':checked')) {
                $('.foo').value = true; // attr('checked', 'checked');
            } else {
                $('.foo').value = false; //removeAttr('checked');
            }
        });
    });
</script>
            *@
            
            
            
<script type="text/javascript">
    $(function () {
        $(".linkButton").click(
            function (event) {
                if (!confirm('Вы уверены, что хотите удалить выбранную запись?')) return false;
                event.preventDefault();
                var link = event.target;
                var action = link.href;
                while (link.tagName != 'FORM') {
                    link = link.parentElement;
                    if (!link) {
                        return;
                    }
                }
                link.action = action;
                link.method = "POST";
                link.submit();
            });
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#chkHeader').change(function () {
            if ($(this).is(':checked')) {
                $('.reqPayment').attr('checked', 'checked');
            } else {
                $('.reqPayment').removeAttr('checked');
            }
        });
    }); 
</script>