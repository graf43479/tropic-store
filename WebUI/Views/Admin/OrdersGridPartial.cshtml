
@using MvcContrib.UI
@using MvcContrib.UI.Grid
@using WebUI.Infrastructure.ExtensionMethods
@using SortDirection = MvcContrib.Sorting.SortDirection
@*@model IEnumerable<Domain.Entities.Category>*@
@model WebUI.Models.PagedViewModel<Domain.Entities.OrdersSummary>

<style type="text/css">
    .grid-style {
        margin-left: 0;
        margin-right: 0;
    }
</style>

@{
    Html.RenderPartial("Pager", Model.PagedList);
}

@using (Html.BeginForm("DeleteOrderSummary", "Admin", FormMethod.Post))
{

    @Html.Grid(Model.PagedList).Columns(column =>
        {
            column.Custom(a => Html.Raw("<input type='checkbox' class='reqPayment' name='resubmit' value='" + a.OrderSummaryID + "'/>")).Header(o => "<input type=\"checkbox\" id='chkHeader'  title='Выбрать'/>")
                                          .Encode(false)
                                          .Sortable(false)
                                          .HeaderAttributes(new Dictionary<string, object> { { "style", "width:20px" } }); 
            
            column.For(x => Html.ActionQueryLink(x.OrderNumber.ToString(), "OrdersDetails", new {orderSummaryID = x.OrderSummaryID, page = 1})).SortColumnName("OrderNumber").Named("№");
            
            @*
            column.Custom(x => (x.IsActive) ? "Активен" : "Закрыт").SortColumnName("IsActive").Named("Статус").Attributes(x =>
                {
                    if (x.Item.IsActive == true)
                    {
                        return new Dictionary<string, object> {{"style", "color:red; word-break: normal"}};
                    }
                    return new Dictionary<string, object> {{"style", "color:grey; word-break: normal"}};
                }).InsertAt(1);
            *@
        
        
            column.Custom(x => (x.IsActive) ? Html.Raw("<span class='glyphicon glyphicon-tag' title='Заказ активен' style='color: #8EB50C;'></span>") : Html.Raw("<span class='glyphicon glyphicon-off' title='Заказ выполнен или отменен' style='color: black;'></span>")).SortColumnName("IsActive").Named("Статус");
            
            
            
            
            
            column.For(x => Html.ActionLink(x.UserName, "UsersView", "Admin", new {searchWord = x.UserName})).SortColumnName("UserName").Named("Пользователь").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left;" } };
        });
            column.For(x => Html.ActionQueryLink(x.Phone, "Orders", new {searchWord = x.Phone})).SortColumnName("Phone").Named("Телефон");
            //column.For(x => Html.ActionQueryLink(x.UserAddress, "Orders", new { searchWord = x.UserAddress })).SortColumnName("UserAddress").Named("Адрес").InsertAt(4);
    @*Выводс списка заказов на эту дату по клику*@
            column.For(x => Html.ActionQueryLink(x.TransactionDate.ToShortDateString(), "EditUser", new {userId = x.UserID})).SortColumnName("TransactionDate").Named("Дата заказа").Attributes(x =>
                {
                    return new
                        Dictionary<string, object> {{"style", "word-break: normal;"}};
                });
            column.For(x => Html.ActionQueryLink(x.TransactionDate.ToShortTimeString(), "EditUser", new {userId = x.UserID})).SortColumnName("TransactionDate").Named("Время заказа").Sortable(false);
            column.For(x => Html.ActionQueryLink(x.TotalValue.ToString(), "OrdersDetails", new {orderSummaryID = x.OrderSummaryID, page = 1})).SortColumnName("TotalValue").Named("Сумма").Attributes(x =>
                {
                    return new
                        Dictionary<string, object> {{"style", "word-break: normal;"}};
                });
    @*column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/DeleteOrderSummary' method='post'> <input id='orderSummaryID' name='orderSummaryID' type='hidden' value='{0}' /><input type='submit' value='Удалить' /></form>", x.OrderSummaryID)))
          .Sortable(false).Named("Удалить");
    column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/EditOrderSummaryBegin' method='post'> <input id='orderSummaryID' name='orderSummaryID' type='hidden' value='{0}' /><input type='submit' value='Правка' /></form>", x.OrderSummaryID)))
    .Sortable(false).Named("Правка");*@
            column.For(x => Html.ActionQueryLink(x.ShippingPrice.Value.ToString(), "DimShipping", null )).SortColumnName("ShippingPrice").Named("Доставка");
            column.Custom(x => x.TotalValue + x.ShippingPrice).Named("Итого");
            //column.For(x => Html.ActionLink("Правка", "EditOrderSummaryBegin", new { orderSummaryID = x.OrderSummaryID }, new { @class = "linkButton" })).Named("Правка");

            column.Custom(x => Html.Raw("<a href = " + Url.Action("EditOrderSummary", "Admin", new { orderSummaryID = x.OrderSummaryID }) + " class='glyphicon glyphicon-edit btn-xs btn btn-default' title='Редактировать'></a>")).Header(o => "<span class='glyphicon glyphicon-edit'> </span>").Encode(false)
                                          .Sortable(false);

            if (User.IsInRole("Admin") || (User.IsInRole("ContentManager")))
            {
                column.Custom(x => Html.Raw("<a href = " + Url.Action("DeleteOrderSummary", "Admin", new {orderSummaryID = x.OrderSummaryID}) + " class='linkButton glyphicon glyphicon-remove btn-xs btn btn-danger' title='Удалить'></a>")).Named("Options").Header(o => "<span class='glyphicon glyphicon-remove'> </span>").Encode(false)
                      .Sortable(false);
            }



        }).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style").Empty("Нет данных")

    @*@Html.ActionLink("Экспорт отчетов в Excel", "Export2", "Admin", new { query = "orders" }, null)*@
       
    <div class="col-lg-12" style="padding: 0; margin: 10px 0 10px 0;">
        <a class="btn btn-md btn-default" href="@Url.Action("Export2", "Admin", new { query = "orders" })" style=""><i class="fa fa-file-excel-o" style="color: darkgreen">&nbsp;</i>В Excel</a>
        <button type="submit" class="btn btn-md btn-danger " style="margin-bottom: 0px"><span class="glyphicon glyphicon-remove">&nbsp;</span>Удалить выбранное</button>
    </div>
}
       
<script type="text/javascript">
    $(function () {
        $(".linkButton").click(
            function (event) {
                if (!confirm('Are you sure?')) return false;
                event.preventDefault();
                var link = event.target;
                var action = link.href;
              //  alert(action);
                while (link.tagName != 'FORM') {
                    link = link.parentElement;
                    if (!link) {
                        return;
                    }
                }
                link.action = action;
                link.method = "POST";
                link.submit();
            });
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#chkHeader').change(function () {
            if ($(this).is(':checked')) {
                $('.reqPayment').attr('checked', 'checked');
            } else {
                $('.reqPayment').removeAttr('checked');
            }
        });
    }); 
</script>