@using MvcContrib.UI.Grid
@model WebUI.Models.PagedViewModel<Domain.Entities.Mailing>





@{
    Html.RenderPartial("Pager", Model.PagedList);
}


@Html.Grid(Model.PagedList).Columns(column =>
        {
            column.For(x => Ajax.ActionLink(x.UpdateDate.ToShortDateString(), "Mailing", new { mailingId = x.MailingID }, new AjaxOptions
                {
                    UpdateTargetId = "newsDetails",
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "GET",
                    OnBegin = "gifLoaderBefore",
                    OnSuccess = "gifLoaderAfter",
                    OnFailure = "gifLoaderAfter",
                    OnComplete = "gifLoaderAfter"
                })).SortColumnName("UpdateDate").Sortable(true).Named("Дата");


            column.For(x => Ajax.ActionLink(x.Subject, "Mailing", new { mailingId = x.MailingID }, new AjaxOptions
            {
                UpdateTargetId = "newsDetails",
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "GET",
                OnBegin = "gifLoaderBefore",
                OnSuccess = "gifLoaderAfter",
                OnFailure = "gifLoaderAfter",
                OnComplete = "gifLoaderAfter"
            })).SortColumnName("UpdateDate").Sortable(true).Named("Тема").Attributes(x =>
            {
                return new
                    Dictionary<string, object> { { "style", "word-break: normal; text-align: left;" } };
            });

            column.For(x => Ajax.ActionLink((x.IsSent==true) ? "Да" : "Нет", "Mailing", new { mailingId = x.MailingID }, new AjaxOptions
            {
                UpdateTargetId = "newsDetails",
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "GET",
                OnBegin = "gifLoaderBefore",
                OnSuccess = "gifLoaderAfter",
                OnFailure = "gifLoaderAfter",
                OnComplete = "gifLoaderAfter"
            })).SortColumnName("UpdateDate").Sortable(true).Named("Отправлен").Attributes(x =>
            {
                return new
                    Dictionary<string, object> { { "style", "word-break: normal; text-align: left;" } };
            });
            
        }).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style").Empty("Нет данных")