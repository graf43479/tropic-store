@using MvcContrib.UI.Grid
@model WebUI.Models.PagedViewModel<WebUI.Models.UserRoleViewModel>
           
           <style type="text/css">
    .grid-style {
        margin-left: 0;
        margin-right: 0;
    }
</style>
           
@{
    Html.RenderPartial("Pager", Model.PagedList);
}

@Html.Grid(Model.PagedList).Columns(column =>
    {
        /*column.For(x => Html.ActionQueryLink(x.User.Login, "EditProduct", new { productId = x.ProductID })).SortColumnName("Name").Named("Наименование товара").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left; padding-left: 20px;" } };
        }).InsertAt(0);*/
        column.For(x => @Html.ActionLink(x.Login, "EditUserRole", new {userRoleId = x.UserRoleID}, new { @class = "userRoleChange" })).SortColumnName("Login").Named("Логин");
        column.For(x => x.RoleName).SortColumnName("RoleName").Named("Роль");
        column.For(x => x.Email).SortColumnName("Email").Named("Email");
        column.For(x => x.UserName).SortColumnName("UserName").Named("Имя");
        column.For(x => x.Phone).SortColumnName("Phone").Named("Телефон");
        column.For(x => x.Created).SortColumnName("Created").Named("Дата создания");
        
        
        //column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/DeleteProduct' method='post'> <input id='productId' name='productId' type='hidden' value='{0}' /><input type='submit' value='Удалить' /></form>", x.ProductID)))
         // .SortColumnName("Name").Sortable(false).Named("Действие");
    }
           ).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style" @*"grid-style"*@).Empty("Нет данных")
           
           
           
                   <div id="updateDialog" title="Роль"></div>
         


           
 <script type="text/javascript">
     function CommonUserRole() {
         _this = this;
         var linkObjUrl;

         this.init = function () {

             $(".userRoleChange").click(function (event) {
                 //alert('!!');
                 event.preventDefault();
                 linkObjUrl = $(this);
                 var viewUrl = linkObjUrl.attr('href');
                // alert(viewUrl);
                 _this.showUserRolePopup(viewUrl, initUserRolePopup);
             });
         };


         this.showUserRolePopup = function (url, callback) {
             $.ajax({
                 type: "GET",
                 url: url,
                 success: function (data) {
                     showUserRoleModalData(data, callback);
                 },
                 //error: alert('error')
             });
         };


         function initUserRolePopup(modal) {
             $("#userRoleButton").click(function () {
                 alert('clicked');
                 $.ajax({
                     type: "POST",
                     url: "/Admin/EditUserRole",
                     data: $("#updateUserRoleForm").serialize(),
                     success: function (data) {
                         alert('tada0');
                         initUserRolePopup(modal);
                         alert('tada1');
                         updateSuccess(data);
                     },
                     error: alert('Error')
                 });
             });
         }


         function showUserRoleModalData(data, callback) {
             $(".modal-backdrop").remove();
             var popupWrapper = $("#updateDialog");
             popupWrapper.empty();
             popupWrapper.html(data);
             var popup = $(".modal", popupWrapper);
             $(".modal", popupWrapper).modal();
         }


         function updateSuccess(data) {
             alert('!!!');
             if (data.Success == true) {
                 window.location.reload();
             } else {
                 $("#update-message").html(data.ErrorMessage);
                 $("#update-message").show();    
             }
         }
     }

     var common = null;
     $().ready(function () {
         common = new CommonUserRole();
         common.init();
     });



    </script> 